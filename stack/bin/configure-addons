#!/usr/bin/env bash
set -eo pipefail

addons_root="/.devstep/addons"

available_addons() {
  for addon in "${addons_root}"/*; do
    echo "  - $(basename $addon)"
  done
}

usage() {
  cat <<EOF
Usage:
configure-addons --auto <workspace-dir>
configure-addons <addon-1> <addon-...>

Available addons:
$(available_addons)
EOF
  return 0
}

options=$(getopt -o h -l help,auto -- "$@")

if [ $? -ne 0 ]; then
    usage
    exit 1
fi

eval set -- "$options"

AUTO='0'
while :; do
    case "$1" in
        -h|--help)  usage && exit 1;;
        --auto)     AUTO='1' && shift 1;;
        *)          shift 1 && break;;
    esac
done

function output_redirect() {
  if [[ "$slug_file" == "-" ]]; then
    cat - 1>&2
  else
    cat -
  fi
}

function echo_title() {
  echo $'\e[1G----->' $* | output_redirect
}

function ensure_indent() {
  while read line; do
    if [[ "$line" == --* ]]; then
      echo $'\e[1G'$line | output_redirect
    else
      echo $'\e[1G      ' "$line" | output_redirect
    fi
  done
}

declare -a SELECTED_ADDONS
if [ "${AUTO}" = '1' ]; then
  [ "$#" != '1' ] &&
    usage &&
    exit 1

  ADDONS=("${addons_root}"/*)
  for addon in "${ADDONS[@]}"; do
    if $($addon/bin/detect "${project_root}" &>/dev/null); then
      SELECTED_ADDONS+=("$(basename $addon)")
    fi
  done
else
  SELECTED_ADDONS=$*
fi

if [[ -z "${SELECTED_ADDONS[@]}" ]]; then
  echo_title "Unable to identify an addon for the workspace!"
  exit 0
fi

# Validate provided addons
for addon in ${SELECTED_ADDONS}; do
  if ! [ -d ${addons_root}/${addon} ]; then
    echo "Invalid addon '${addon}'"
    usage
    exit 1
  fi
done

for addon in ${SELECTED_ADDONS}; do
  echo_title "Configuring ${addon}..."
  ${addons_root}/${addon}/bin/configure $project_root $cache_root | ensure_indent
done
