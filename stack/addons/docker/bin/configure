#!/usr/bin/env bash

set -e            # fail fast
set -o pipefail   # dont ignore exit codes when piping output
# set -x          # enable debugging

CACHE_DIR=${2:-"${HOME}/cache/docker"}
DOCKER_CMD="${HOME}/bin/docker"
DEVSTEP_DOCKER_VERSION=${DEVSTEP_DOCKER_VERSION:-"1.4.1"}
URL=https://get.docker.com/builds/Linux/x86_64/docker-${DEVSTEP_DOCKER_VERSION}

mkdir -p $CACHE_DIR

if ! [ -x "${DOCKER_CMD}" ]; then
  if ! [ -f "${CACHE_DIR}/docker-${DEVSTEP_DOCKER_VERSION}" ]; then
    echo "-----> [docker] Downloading ${DEVSTEP_DOCKER_VERSION} version from ${URL}"
    curl -l -s $URL > ${CACHE_DIR}/docker-${DEVSTEP_DOCKER_VERSION}
  fi

  cp ${CACHE_DIR}/docker-${DEVSTEP_DOCKER_VERSION} ${DOCKER_CMD}
  chmod +x "${DOCKER_CMD}"
fi

if ! [ -x /sbin/iptables ] || ! [ -x /sbin/apparmor_parser ]; then
  echo "-----> [docker] Installing iptables and apparmor"
  sudo apt-get update -q && sudo apt-get install iptables apparmor -y --force-yes -q
fi

echo "-----> [docker] Installed $(${HOME}/bin/docker --version)"

addon_basedir="$( cd -P "$( dirname "$0" )" && pwd )"

cp ${addon_basedir}/wrapdocker "$DEVSTEP_CONF/init.d/00-wrapdocker.sh"
chmod +x "$DEVSTEP_CONF/init.d/00-wrapdocker.sh"
${addon_basedir}/wrapdocker

cp $addon_basedir/start-daemon $DEVSTEP_CONF/init.d/01-start-docker.sh
chmod +x $DEVSTEP_CONF/init.d/01-start-docker.sh

echo "-----> [docker] Starting daemon"
$DEVSTEP_CONF/init.d/01-start-docker.sh &>/dev/null || true

echo "-----> [docker] Finished configuration!"
